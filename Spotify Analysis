# For this project, I downloaded Sptofy data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL.

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
  id integer PRIMARY KEY,
  artist_name varchar NOT NULL,
  track_name varchar NOT NULL,
  track_id varchar NOT NULL,
  popularity integer NOT NULL,
  danceability decimal(4,3) NOT NULL,
  energy decimal(4,3) NOT NULL,
  key integer NOT NULL,
  loudness decimal(5,3) NOT NULL,
  mode integer NOT NULL,
  speechiness decimal(5,4) NOT NULL,
  acousticness decimal(6,5) NOT NULL,
  instrumentalness text NOT NULL,
  liveness decimal(5,4) NOT NULL,
  valence decimal(4,3) NOT NULL,
  tempo decimal(6,3) NOT NULL,
  duration_ms integer NOT NULL,
  time_signature integer NOT NULL 
)

# Then I inserted the Spotify Data .csv into the table.
# Next, I explored the data using the following SQL

#1. What is the average danceability and energy  by artist?
SELECT artist_name, track_name, AVG(danceability), AVG(energy)
FROM Spotifydata
GROUP BY artist_name, track_name
ORDER BY AVG(danceability) desc; 
 
#2. Who are the top 10 artists based on popularity?
SELECT artist_name, AVG(popularity)
FROM Spotifydata
GROUP BY artist_name
ORDER BY popularity desc LIMIT 10;

#3. What artist released the shortest song
SELECT artist_name, duration_ms
FROM Spotifydata
GROUP BY artist_name
ORDER BY duration_ms asc LIMIT 1;

#4. What is the average tempo and liveness for the 10 most popular songs
SELECT artist_name, track_name, AVG(tempo), AVG(liveness), popularity
FROM Spotifydata
GROUP BY track_name
ORDER BY popularity desc LIMIT 10;

#5. What artists have the lowest valence in their tracks?
SELECT artist_name, AVG(valence)
FROM Spotifydata
GROUP BY artist_name
ORDER BY valence asc;
